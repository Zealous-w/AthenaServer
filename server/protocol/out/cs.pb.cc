// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cs {
class C2S_PingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Ping> {
} _C2S_Ping_default_instance_;
class S2C_PingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Ping> {
} _S2C_Ping_default_instance_;
class C2S_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<C2S_Login> {
} _C2S_Login_default_instance_;
class S2C_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2C_Login> {
} _S2C_Login_default_instance_;

namespace protobuf_cs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Ping, send_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Ping, send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Ping, recv_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(C2S_Login, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2C_Login, ret_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(C2S_Ping)},
  { 6, -1, sizeof(S2C_Ping)},
  { 13, -1, sizeof(C2S_Login)},
  { 19, -1, sizeof(S2C_Login)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Ping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_C2S_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2C_Login_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _C2S_Ping_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _S2C_Ping_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _C2S_Login_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _S2C_Login_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _C2S_Ping_default_instance_.DefaultConstruct();
  _S2C_Ping_default_instance_.DefaultConstruct();
  _C2S_Login_default_instance_.DefaultConstruct();
  _S2C_Login_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\010cs.proto\022\002cs\"\035\n\010C2S_Ping\022\021\n\tsend_time\030"
      "\001 \001(\r\"0\n\010S2C_Ping\022\021\n\tsend_time\030\001 \001(\r\022\021\n\t"
      "recv_time\030\002 \001(\r\"\030\n\tC2S_Login\022\013\n\003uid\030\001 \001("
      "\004\"\030\n\tS2C_Login\022\013\n\003ret\030\001 \001(\r*`\n\007ProtoID\022\013"
      "\n\007ID_NULL\020\000\022\020\n\013ID_C2S_Ping\020\221N\022\020\n\013ID_S2C_"
      "Ping\020\222N\022\021\n\014ID_C2S_Login\020\223N\022\021\n\014ID_S2C_Log"
      "in\020\224Nb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 253);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cs.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cs_2eproto

const ::google::protobuf::EnumDescriptor* ProtoID_descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_enum_descriptors[0];
}
bool ProtoID_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Ping::kSendTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Ping::C2S_Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.C2S_Ping)
}
C2S_Ping::C2S_Ping(const C2S_Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  send_time_ = from.send_time_;
  // @@protoc_insertion_point(copy_constructor:cs.C2S_Ping)
}

void C2S_Ping::SharedCtor() {
  send_time_ = 0u;
  _cached_size_ = 0;
}

C2S_Ping::~C2S_Ping() {
  // @@protoc_insertion_point(destructor:cs.C2S_Ping)
  SharedDtor();
}

void C2S_Ping::SharedDtor() {
}

void C2S_Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Ping::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Ping& C2S_Ping::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Ping* C2S_Ping::New(::google::protobuf::Arena* arena) const {
  C2S_Ping* n = new C2S_Ping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.C2S_Ping)
  send_time_ = 0u;
}

bool C2S_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.C2S_Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 send_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.C2S_Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.C2S_Ping)
  return false;
#undef DO_
}

void C2S_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.C2S_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->send_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.C2S_Ping)
}

::google::protobuf::uint8* C2S_Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.C2S_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->send_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.C2S_Ping)
  return target;
}

size_t C2S_Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.C2S_Ping)
  size_t total_size = 0;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->send_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.C2S_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.C2S_Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.C2S_Ping)
    MergeFrom(*source);
  }
}

void C2S_Ping::MergeFrom(const C2S_Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.C2S_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
}

void C2S_Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.C2S_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Ping::CopyFrom(const C2S_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.C2S_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Ping::IsInitialized() const {
  return true;
}

void C2S_Ping::Swap(C2S_Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Ping::InternalSwap(C2S_Ping* other) {
  std::swap(send_time_, other->send_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Ping::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Ping

// uint32 send_time = 1;
void C2S_Ping::clear_send_time() {
  send_time_ = 0u;
}
::google::protobuf::uint32 C2S_Ping::send_time() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Ping.send_time)
  return send_time_;
}
void C2S_Ping::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Ping.send_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Ping::kSendTimeFieldNumber;
const int S2C_Ping::kRecvTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Ping::S2C_Ping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_Ping)
}
S2C_Ping::S2C_Ping(const S2C_Ping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&send_time_, &from.send_time_,
    reinterpret_cast<char*>(&recv_time_) -
    reinterpret_cast<char*>(&send_time_) + sizeof(recv_time_));
  // @@protoc_insertion_point(copy_constructor:cs.S2C_Ping)
}

void S2C_Ping::SharedCtor() {
  ::memset(&send_time_, 0, reinterpret_cast<char*>(&recv_time_) -
    reinterpret_cast<char*>(&send_time_) + sizeof(recv_time_));
  _cached_size_ = 0;
}

S2C_Ping::~S2C_Ping() {
  // @@protoc_insertion_point(destructor:cs.S2C_Ping)
  SharedDtor();
}

void S2C_Ping::SharedDtor() {
}

void S2C_Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Ping::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Ping& S2C_Ping::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Ping* S2C_Ping::New(::google::protobuf::Arena* arena) const {
  S2C_Ping* n = new S2C_Ping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_Ping)
  ::memset(&send_time_, 0, reinterpret_cast<char*>(&recv_time_) -
    reinterpret_cast<char*>(&send_time_) + sizeof(recv_time_));
}

bool S2C_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_Ping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 send_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recv_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recv_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_Ping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_Ping)
  return false;
#undef DO_
}

void S2C_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->send_time(), output);
  }

  // uint32 recv_time = 2;
  if (this->recv_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recv_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_Ping)
}

::google::protobuf::uint8* S2C_Ping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_Ping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->send_time(), target);
  }

  // uint32 recv_time = 2;
  if (this->recv_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recv_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_Ping)
  return target;
}

size_t S2C_Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_Ping)
  size_t total_size = 0;

  // uint32 send_time = 1;
  if (this->send_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->send_time());
  }

  // uint32 recv_time = 2;
  if (this->recv_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recv_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Ping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Ping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Ping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_Ping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_Ping)
    MergeFrom(*source);
  }
}

void S2C_Ping::MergeFrom(const S2C_Ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_Ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
  if (from.recv_time() != 0) {
    set_recv_time(from.recv_time());
  }
}

void S2C_Ping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Ping::CopyFrom(const S2C_Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Ping::IsInitialized() const {
  return true;
}

void S2C_Ping::Swap(S2C_Ping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Ping::InternalSwap(S2C_Ping* other) {
  std::swap(send_time_, other->send_time_);
  std::swap(recv_time_, other->recv_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Ping::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Ping

// uint32 send_time = 1;
void S2C_Ping::clear_send_time() {
  send_time_ = 0u;
}
::google::protobuf::uint32 S2C_Ping::send_time() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Ping.send_time)
  return send_time_;
}
void S2C_Ping::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Ping.send_time)
}

// uint32 recv_time = 2;
void S2C_Ping::clear_recv_time() {
  recv_time_ = 0u;
}
::google::protobuf::uint32 S2C_Ping::recv_time() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Ping.recv_time)
  return recv_time_;
}
void S2C_Ping::set_recv_time(::google::protobuf::uint32 value) {
  
  recv_time_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Ping.recv_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_Login::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_Login::C2S_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.C2S_Login)
}
C2S_Login::C2S_Login(const C2S_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:cs.C2S_Login)
}

void C2S_Login::SharedCtor() {
  uid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

C2S_Login::~C2S_Login() {
  // @@protoc_insertion_point(destructor:cs.C2S_Login)
  SharedDtor();
}

void C2S_Login::SharedDtor() {
}

void C2S_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S_Login::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_Login& C2S_Login::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

C2S_Login* C2S_Login::New(::google::protobuf::Arena* arena) const {
  C2S_Login* n = new C2S_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.C2S_Login)
  uid_ = GOOGLE_ULONGLONG(0);
}

bool C2S_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.C2S_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.C2S_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.C2S_Login)
  return false;
#undef DO_
}

void C2S_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.C2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.C2S_Login)
}

::google::protobuf::uint8* C2S_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.C2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.C2S_Login)
  return target;
}

size_t C2S_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.C2S_Login)
  size_t total_size = 0;

  // uint64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.C2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.C2S_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.C2S_Login)
    MergeFrom(*source);
  }
}

void C2S_Login::MergeFrom(const C2S_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.C2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void C2S_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.C2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_Login::CopyFrom(const C2S_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.C2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_Login::IsInitialized() const {
  return true;
}

void C2S_Login::Swap(C2S_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_Login::InternalSwap(C2S_Login* other) {
  std::swap(uid_, other->uid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S_Login::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_Login

// uint64 uid = 1;
void C2S_Login::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 C2S_Login::uid() const {
  // @@protoc_insertion_point(field_get:cs.C2S_Login.uid)
  return uid_;
}
void C2S_Login::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:cs.C2S_Login.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_Login::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_Login::S2C_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cs.S2C_Login)
}
S2C_Login::S2C_Login(const S2C_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:cs.S2C_Login)
}

void S2C_Login::SharedCtor() {
  ret_ = 0u;
  _cached_size_ = 0;
}

S2C_Login::~S2C_Login() {
  // @@protoc_insertion_point(destructor:cs.S2C_Login)
  SharedDtor();
}

void S2C_Login::SharedDtor() {
}

void S2C_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C_Login::descriptor() {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_Login& S2C_Login::default_instance() {
  protobuf_cs_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2C_Login* S2C_Login::New(::google::protobuf::Arena* arena) const {
  S2C_Login* n = new S2C_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:cs.S2C_Login)
  ret_ = 0u;
}

bool S2C_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cs.S2C_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cs.S2C_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cs.S2C_Login)
  return false;
#undef DO_
}

void S2C_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cs.S2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ret(), output);
  }

  // @@protoc_insertion_point(serialize_end:cs.S2C_Login)
}

::google::protobuf::uint8* S2C_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cs.S2C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cs.S2C_Login)
  return target;
}

size_t S2C_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cs.S2C_Login)
  size_t total_size = 0;

  // uint32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cs.S2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cs.S2C_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cs.S2C_Login)
    MergeFrom(*source);
  }
}

void S2C_Login::MergeFrom(const S2C_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cs.S2C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void S2C_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cs.S2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_Login::CopyFrom(const S2C_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cs.S2C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_Login::IsInitialized() const {
  return true;
}

void S2C_Login::Swap(S2C_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_Login::InternalSwap(S2C_Login* other) {
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C_Login::GetMetadata() const {
  protobuf_cs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2C_Login

// uint32 ret = 1;
void S2C_Login::clear_ret() {
  ret_ = 0u;
}
::google::protobuf::uint32 S2C_Login::ret() const {
  // @@protoc_insertion_point(field_get:cs.S2C_Login.ret)
  return ret_;
}
void S2C_Login::set_ret(::google::protobuf::uint32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:cs.S2C_Login.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cs

// @@protoc_insertion_point(global_scope)
